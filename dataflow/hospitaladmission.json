{
	"name": "hospitaladmission",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_admission",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "lookup"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date",
						"type": "DatasetReference"
					},
					"name": "dimdateSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_daily_Sink",
						"type": "DatasetReference"
					},
					"name": "SinkDaily"
				},
				{
					"dataset": {
						"referenceName": "ds_weekly_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SelectRequired"
				},
				{
					"name": "lookupCountryCode"
				},
				{
					"name": "select1"
				},
				{
					"name": "splitDailyFromWeekely"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "AggDimDate"
				},
				{
					"name": "JoinWeekDate"
				},
				{
					"name": "PivotHospitalICU"
				},
				{
					"name": "pivotWeekly"
				},
				{
					"name": "sortweekly"
				},
				{
					"name": "sortdaily"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> lookup",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dimdateSource",
				"HospitalAdmissionSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          Reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequired",
				"SelectRequired, lookup lookup(SelectRequired@country == lookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCountryCode",
				"lookupCountryCode select(mapColumn(",
				"          country = SelectRequired@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          indicator,",
				"          value,",
				"          Reported_date,",
				"          reported_year_week,",
				"          source,",
				"          continent",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 split(indicator== 'Daily hospital occupancy' || indicator == 'Daily ICU occupancy',",
				"     disjoint: false) ~> splitDailyFromWeekely@(Daily, Weekly)",
				"dimdateSource derive(ecdc_year_week = year + '-W' + lpad(week_of_year, 2, '0')) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(ecdc_year_week),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AggDimDate",
				"splitDailyFromWeekely@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWeekDate",
				"splitDailyFromWeekely@Daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          Reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     Count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> PivotHospitalICU",
				"JoinWeekDate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          ecdc_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          source,",
				"          reported_year_week),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     Count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotWeekly",
				"pivotWeekly sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> sortweekly",
				"PivotHospitalICU sort(desc(Reported_date, true),",
				"     asc(country, true)) ~> sortdaily",
				"sortdaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          Reported_date,",
				"          source,",
				"          Hospital_occupancy_Count = {Daily hospital occupancy_Count},",
				"          ICU_Occupancy_Count = {Daily ICU occupancy_Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"sortweekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          {Weekly new hospital admissions per 100k_Count},",
				"          {Weekly new ICU admissions per 100k_Count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['daily_data.csv'],",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDaily",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['weekly_data.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}